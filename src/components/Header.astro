---
import type { Menu } from "../entities";
import Logo from "./Logo.astro";
import Navbar from "./Navbar.astro";
import Bars3BottomRight from "astro-heroicons/outline/Bars3BottomRight.astro";
import XMark from "astro-heroicons/outline/XMark.astro";

interface Props {
	pathname: string;
	siteTitle: string;
	menus: Menu[];
}

const { pathname, siteTitle, menus } = Astro.props;
---

<header class="header">
	<div
		class="w-full max-w-5xl mx-auto flex flex-col px-4 sm:px-6 md:px-8 lg:px-10 xl:px-0 py-4 gap-0 sm:py-6 md:py-8 md:gap-14 lg:py-10 lg:gap-16 4sm:flex-row 4sm:justify-between 4sm:items-center"
	>
		<div class="flex justify-between items-center">
			<a
				href="/"
				class="justify-self-start text-secondary dark:text-primary duration-200 hover:text-opacity-75"
				aria-label={siteTitle}
			>
				<Logo />
			</a>

			<button
				aria-label="Navigation Menu Toggle"
				class="inline-flex 4sm:hidden items-center gap-2 duration-200 hover:bg-opacity-80 focus:outline-none focus:ring focus:ring-offset-2 focus:ring-secondary dark:focus:ring-primary focus:ring-offset-transparent"
			>
				<span class="open-icon block">
					<Bars3BottomRight class="w-8 h-8 focus:outline-none" />
				</span>

				<span class="close-icon hidden">
					<XMark class="w-8 h-8 focus:outline-none" />
				</span>
			</button>
		</div>

		<Navbar {pathname} {menus} />
	</div>
</header>

<script is:inline>
	let isNavMenuOpen = false;

	const navMenu = document.querySelector(".navbar");
	const navMenuButton = document.querySelector(".header button");
	const navMenuIcon = document.querySelector(".header button .open-icon");
	const navCloseIcon = document.querySelector(".header button .close-icon");
	const hLightThemeButton = document.querySelector(
		".theme-toggle > div .light-theme-button"
	);
	const hDarkThemeButton = document.querySelector(
		".theme-toggle > div .dark-theme-button"
	);
	const hAutoThemeButton = document.querySelector(
		".theme-toggle > div .auto-theme-button"
	);

	function navMenuToggle() {
		isNavMenuOpen = !isNavMenuOpen;

		if (isNavMenuOpen) {
			navMenu.classList.add("flex");
			navMenu.classList.remove("hidden");
			navMenuIcon.classList.add("hidden");
			navMenuIcon.classList.remove("block");
			navCloseIcon.classList.remove("hidden");
			navCloseIcon.classList.add("block");
		} else {
			navMenu.classList.remove("flex");
			navMenu.classList.add("hidden");
			navCloseIcon.classList.add("hidden");
			navCloseIcon.classList.remove("block");
			navMenuIcon.classList.remove("hidden");
			navMenuIcon.classList.add("block");
		}
	}

	[
		navMenuButton,
		hLightThemeButton,
		hDarkThemeButton,
		hAutoThemeButton,
	].forEach((button) => {
		button?.addEventListener("click", navMenuToggle);
	});
</script>
